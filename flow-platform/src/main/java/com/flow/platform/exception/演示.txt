//5. 异常处理示例

//(1) 在服务层抛出异常
public User getUserById(Long userId) {
    User user = userRepository.findById(userId)
        .orElseThrow(() -> new ResourceNotFoundException("用户未找到"));
    return user;
}

//(2) 在控制器层捕获异常
@GetMapping("/users/{userId}")
public ResponseEntity<User> getUser(@PathVariable Long userId) {
    User user = userService.getUserById(userId);
    return ResponseEntity.ok(user);
}

//(3) 在全局异常处理类中处理异常
@ExceptionHandler(ResourceNotFoundException.class)
public ResponseEntity<ApiResponse> handleResourceNotFoundException(ResourceNotFoundException ex, WebRequest request) {
    ApiResponse response = new ApiResponse(false, ex.getMessage());
    return new ResponseEntity<>(response, HttpStatus.NOT_FOUND);
}